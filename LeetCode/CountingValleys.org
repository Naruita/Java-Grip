#+TITLE: Counting Valleys
#+AUTHOR: Dat Adithya
#+TAGS: @wit @strings

* WHAT IS THIS? :@wit:
A simple program on working with String Based operations.
The question is designed to help you understand how to traverse and operate on a string input.

It requires you to provide a method to work with processing a string, understanding when to validate a range of values, and when to ignore it.

In this case, specifically, you are required to process only the valleys and ignore the mountains.

* Counting Valleys :@strings:
**Question**
An avid hiker keeps meticulous records of their hikes.
During the last hike that took exactly =steps= steps, for every step it was noted if it was an uphill, =U=, or a downhill, =D= step.
Hikes always start and end at sea level, and each step up or down represents a =1= unit change in altitude.

- A mountain is a sequence of consecutive steps above sea level, starting with a step up from sea level and ending with a step down to sea level.
- A valley is a sequence of consecutive steps below sea level, starting with a step down from sea level and ending with a step up to sea level.

Given the sequence of up and down steps during a hike, find and print the number of valleys walked through.

**Function Description**
Complete the countingValleys function in the editor below.

countingValleys has the following parameter(s):
_int steps_: the number of steps on the hike
_string path_: a string describing the path

**Returns**
int: the number of valleys traversed

#+HEADERS: :classname CountingValleys
#+BEGIN_SRC java :results silent
class CountingValleys {

    /*
     ,* Complete the 'countingValleys' function below.
     ,*
     ,* The function is expected to return an INTEGER.
     ,* The function accepts following parameters:
     ,*  1. INTEGER steps
     ,*  2. STRING path
     ,*/

    public static int countingValleys(int steps, String path) {
        // Initializing variables
        int valleyCounter = 0, seaLevelMeter = 0;
        int beforeLevelChange;

        for(int i = 0; i < path.length(); i++){
            // Assigning the value of the previous sea level to a variable
            // for future comparision

            beforeLevelChange = seaLevelMeter;

            // Altering level value based on input
            if(path.charAt(i) == 'U')
                seaLevelMeter++;
            else
                seaLevelMeter--;

            // Checking if previous was a valley or a mountain
            if(seaLevelMeter == 0 && beforeLevelChange < 0)
                valleyCounter++;
        }

        // Returning the required value
        return valleyCounter;
    }

    public static void main(String[] args){
        // Executing the function with a simple I/O operation
        int numberOfValleys = countingValleys(8, "UDDDUDUU");
        System.out.println("Number of Valleys in the given string are : " + numberOfValleys);
    }
}
#+END_SRC

Link to the question => [[https://www.hackerrank.com/challenges/counting-valleys/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=warmup&h_r=next-challenge&h_v=zen][Counting Valleys instead of Stars on Hackerrank]].
